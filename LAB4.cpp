#include <iostream>

используя пространство имен std;

int main()

{

	int x, size;

	char заново;

	делать{

		cout << "Введите размер массива (сколько чисел вы хотите ввести):";

		cin >> размер;

		float* arr = новый float[размер]; // создаём динамический массив

		cout << endl;

		cout << "Введите" << size << "числа:" << endl;

		for (int i = 0; i < size; i++) {// считываем данные, введенные пользователем

			cout << "[" << i + 1 << "]";

			cin >> arr[я];

		}

		cout << endl;

		cout << "Что вы хотите сделать?" << endl;

		cout << "1. Сортировка по возрастанию 2. Сортировка по убыванию";

		cin >> x;

		if (x == 1 || x == 2) {

			переключатель(x)

			{

			Дело 1: {

				температура поплавка; // временная переменная

				// пузырьковая сортировка массива (по возрастанию)

				for (float i = 0; i < size - 1; i++) {

					for (int j = 0; j < size - i - 1; j++) {

						if (arr[j] > arr[j + 1]) {

							// меняем элементы местами

							temp = arr[j];

							arr[j] = arr[j + 1];

							arr[j + 1] = темп;

						}

					}

				}

				// вывод отсортированного на экран

				for (int i = 0; i < size; i++) {

					cout << arr[i] << "";

				}

				cout << endl;

				перерыв;

			}

			case 2: {

				float temp2;

				// пузырьковая сортировка массива (по убыванию)

				for (float i = 0; i < size - 1; i++) {

					for (int j = 0; j < size - i - 1; j++) {

						if (arr[j] < arr[j + 1]) {

							// меняем элементы местами

							temp2 = arr[j];

							arr[j] = arr[j + 1];

							arr[j + 1] = temp2;

						}

					}

				}

				// вывод отсортированного на экран

				for (int i = 0; i < size; i++) {

					cout << arr[i] << "";

				}

				cout << endl;

				перерыв;

			}

			По умолчанию :

				cout << "Ошибка" << endl;

				перерыв;

			}

			cout << endl;

			cout << "Вы хотите снова запустить? (y / n):";

			cin >> заново;

		}

	} while (заново!= 'n');

	система(«пауза»);

	возврат 0;

}